spring:
  profiles:
    active: local
  application:
    name: saga-orchestrator
  kafka:
    bootstrap-servers: http://localhost:9092
    #consumer:
      #key-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      #value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      #properties.schema.registry.url: http://localhost:9999

  sleuth:
    messaging:
      kafka:
        enabled: false
  zipkin:
    enabled: false


server:
  port: 8090

logging:
  level:
    root: INFO
    cnadata: INFO


spring.main.allow-bean-definition-overriding: true

info:
  name: ${spring.application.name}
  description: resilience4j demo
  environment: ${spring.profiles.active}
  version: 0.0.1

# management api 노출
management.endpoints.web.exposure.include: '*'
management.endpoint.health.show-details: always
# actuator/prometheus 노출
management.metrics.export.prometheus.enabled: true

# 연결 Backend 서비스 상태 확인
management.health.diskspace.enabled: true
management.health.db.enabled: true
management.health.circuitbreakers.enabled: true

# health liveness, readiness 노출
# Spring boot 2.3.3 이상에서는 다음과 같이 사용
management.endpoint.health.probes.enabled: true
management.health.livenessState.enabled: true
management.health.readinessstate.enabled: true

#management.metrics.tags.application: ${spring.application.name}
management.metrics.distribution.percentiles-histogram.http.server.requests: true
management.metrics.distribution.percentiles-histogram.resilience4j.circuitbreaker.calls: true
management.server.port: 8091


resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 20
      minimumNumberOfCalls: 5
      permittedNumberOfCallsInHalfOpenState: 5
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 50s
      failureRateThreshold: 10
      eventConsumerBufferSize: 10
      recordExceptions: org.springframework.web.client.HttpServerErrorException, java.util.concurrent.TimeoutException
      ignoreExceptions:
        - java.net.ConnectException
        - java.lang.IllegalArgumentException
  instances:
    custom-logA:
      baseConfig: default
    custom-logB:
      baseConfig: default
      recordExceptions:
        - java.net.ConnectException
        - java.util.concurrent.TimeoutException
        - io.github.resilience4j.circuitbreaker.CallNotPermittedException
        - org.springframework.web.reactive.function.client.WebClientResponseException
      ignoreException:
        - java.lang.IllegalArgumentException

resilience4j:
  circuitbreaker:
    circuit-breaker-aspect-order: 1

--- #local 환경
spring:
  profiles: local
  datasource:
    url: jdbc:mariadb://a77af7a1caaaf4d84a206b39779ef098-c3ca47260c19debc.elb.ap-northeast-2.amazonaws.com/mydev-db?allowMultiQueries=true
    # url: jdbc:mariadb://localhost/mydev-db?allowMultiQueries=true
    username: admin
    password: ywyi1004
    driver-class-name: org.mariadb.jdbc.Driver
    hikari:
      idle-timeout: 300
      max-lifetime: 300
  jpa:
    open-in-view: true
    generate-ddl: true
    show-sql: true
    hibernate:
      #ddl-auto: create
      ddl-auto: update
      #ddl-auto: create-drop
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        #physical-strategy: cnadata.outbox.util.DBLowerCaseNamingStrategy
        #physical-strategy: cnadata.outbox.util.DBUpperCaseNamingStrategy
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

